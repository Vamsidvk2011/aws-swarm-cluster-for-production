---
- hosts:
    - bastion
  vars_files:
    - defaults/main.yml
  vars:
    - data_container_name: openvpn_data
    - cname_certs_openvpn: SWARM_CLSTR
  tasks:
    - name: look if datacontainer exist
      shell: docker volume ls
      register: docker_volume_info
      tags:
        - vpn
        - check
        - data-volume
        - docker

    - name: start create datacontainer for openvpn
      shell: docker volume create --name {{item}}
      when: "docker_volume_info.stdout.find('{{item}}') == -1"
      with_items:
        "{{data_container_name}}"
      tags:
        - vpn
        - data-volume
        - docker

    - name: configure openvpn 1/2
      shell:
        docker run -v {{data_container_name}}:/etc/openvpn --rm kylemanna/openvpn ovpn_genconfig -u udp://{{bastion_ip}} -N -d -c -p "route {{swarm_cluster_cidr | ipaddr('network')}} {{swarm_cluster_cidr | ipaddr('netmask')}}"
      tags:
        - vpn
        - init-openvpn
        - docker
        - step1

    - name: configure openvpn 2/2 (this step can take long time)
      shell:
        docker run -v {{data_container_name}}:/etc/openvpn --rm -t -e EASYRSA_REQ_CN={{cname_certs_openvpn}} -e EASYRSA_BATCH=1 kylemanna/openvpn ovpn_initpki nopass
      tags:
        - vpn
        - init-openvpn
        - docker
        - step2

    - name: start openvpn server
      shell:
        docker run -v {{data_container_name}}:/etc/openvpn --restart unless-stopped -d -p 1194:1194/udp --cap-add=NET_ADMIN kylemanna/openvpn
      tags:
        - vpn
        - start-server
        - docker

    - name: generate admin certificate
      shell:
        docker run -v {{data_container_name}}:/etc/openvpn --rm -it kylemanna/openvpn easyrsa build-client-full CLIENTADMIN nopass
      tags:
        - vpn
        - admin-certs
        - docker

    - name: get admin certificate
      shell:
        docker run -v {{data_container_name}}:/etc/openvpn  --rm kylemanna/openvpn ovpn_getclient CLIENTADMIN
      register: admin_certs
      tags:
        - vpn
        - get-admin-certs
        - docker

- hosts:
    - localhost
  tasks:
    - name: get conf
      copy: content={{hostvars.bastion.admin_certs.stdout}} dest=/tmp/CLIENTADMIN.conf
      tags:
        - vpn
        - get-admin-certs
        - local
